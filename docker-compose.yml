services:
  # # Message Broker for real-time data processing
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: activity-zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     - activity-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: activity-kafka
  #   depends_on:
  #     zookeeper:
  #       condition: service_healthy
  #   ports:
  #     - "9092:9092"
  #     - "29092:29092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
  #     KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   networks:
  #     - activity-network
  #   healthcheck:
  #     test:
  #       ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:29092 --list"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Database for storing activity data
  postgres:
    image: postgres:latest
    container_name: activity-postgres
    environment:
      POSTGRES_DB: activity_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - activity-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Cache for frequently accessed data
  redis:
    image: redis:latest
    container_name: activity-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - activity-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Admin tools
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: activity-kafka-ui
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #   networks:
  #     - activity-network

networks:
  activity-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
